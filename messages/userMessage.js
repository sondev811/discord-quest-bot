const { EmbedBuilder } = require("@discordjs/builders");
const { userActionType, emoji, imageCommand, levelImage, rankingTrophy } = require("../constants/general");
const { RewardEnum, ActionEnum } = require("../models/quest.model");
const { roundAndFormat } = require("../utils");

const renderFriendList = (friends) => {
  if (!friends || !friends.length) return `${emoji.redDot} Ch∆∞a c√≥`;
  let value = ''
  friends.forEach((friend, index) => {
    if (index !== 0 && index !== friends.length) {
      value += '\n';
    }
    value+= `${emoji.redDot}<@${friend.discordUserId}> - ${level(friend.intimacyPoints)} - ƒêi·ªÉm th√¢n thi·∫øt: ${friend.intimacyPoints} ${emoji.imPoint}`
  });
  return value;
}

const claimed = (isReceivedReward) => {
  return !isReceivedReward ? '``Ph·∫ßn th∆∞·ªüng:`` ' : '``ƒê√£ nh·∫≠n th∆∞·ªüng:`` ';
}

const renderQuest = (quests) => {
  let result = '';
  quests.forEach(quest => {
    result += `${emoji.blank}${emoji.redDot}` + quest.description + '\n';
    result += `${emoji.blank}${emoji.blank}${emoji.giftBox}` + claimed(quest.isReceivedReward) + renderReward(quest.rewards) + '\n';
    result += `${emoji.blank}${emoji.blank}${quest.progress < quest.completionCriteria ? emoji.yellowDot : emoji.greenDot }` + '``Ti·∫øn ƒë·ªô:``' + ` ${quest.action === ActionEnum.VOICE ? roundAndFormat(quest.progress) : quest.progress}/${quest.completionCriteria}` + '\n\n';
  });
  return result;
}

const renderReward = (rewards) => {
  let result = '';
  rewards.forEach((reward, index) => {
    result += '``' + `${reward.rewardType === RewardEnum.GIFT || reward.rewardType === RewardEnum.QUEST_RESET ? 'x' : ''}${reward.quantity}` + '``' + `${reward.rewardType === RewardEnum.SILVER_TICKET ? emoji.silverTicket : reward.rewardType === RewardEnum.GOLD_TICKET ? emoji.goldenTicket : `${reward.giftEmoji}${reward.name}`}${index !== rewards.length - 1 ? ', ' : ''}`;
  });
  return result;
}

const renderRoleBag = (roles) => {
  if (!roles.length) return `${emoji.blank}${emoji.blank}Ch∆∞a c√≥ v·∫≠t ph·∫©m trong t√∫i\n`
  let data = '';
  roles.forEach(role => {
    data += `${emoji.blank}${emoji.fiveDot}<@&${role.roleId}>\n${emoji.blank}¬ª Ch·ª©c nƒÉng: ${role.description}\n\n`
  })
  return data;
}

const renderGiftBag = (gifts) => {
  if (!gifts.length) return `${emoji.blank}${emoji.blank}Ch∆∞a c√≥ v·∫≠t ph·∫©m trong t√∫i\n`
  let data = '';
  gifts.forEach((gift, index) => {
    data += `${emoji.blank}${emoji.fiveDot}${gift.giftEmoji} ${gift.name} ¬ª S·ªë l∆∞·ª£ng: ${gift.quantity}\n${emoji.blank}¬ª Ch·ª©c nƒÉng: ${gift.description}${index === gifts.length - 1? '\n' : '\n\n'}`
  })
  return data;
}

const roleBonusRender = (roles) => {
  let render = ''
  roles.forEach(role => {
    render += `${emoji.blank}${emoji.fiveDot}<@&${role.roleId}>: +${role.valueBuff} ${role.typeBuff === RewardEnum.SILVER_TICKET ? `% ${emoji.silverTicket}` : emoji.goldenTicket} \n`
  })
  return render;
}

const ranking = (rankings) => {
  let index = 1;
  let render = '';
  for(let rank of rankings) {
    if (index > 20) break;
    if (rank.quantity > 0) {
      render +=  '``Top '+ index +'``' + `<@${rank.discordUserId}>: ${rank.quantity} ${rank.type === RewardEnum.SILVER_TICKET ? emoji.silverTicket : emoji.goldenTicket }\n`
      index++;
    }
  }
  return render;
}

const rankingCouple = (rankings) => {
  let index = 1;
  let render = '';
  for(let rank of rankings) {
    if (index > 20) break;
    if (rank.intimacyPoints > 0) {
      render +=  '``Top '+ index +'``' + `<@${rank.discordIdFirst}> - <@${rank.discordIdLast}> : ${rank.intimacyPoints}${emoji.imPoint}\n`
      index++;
    }
  }
  return render;
}

const createUserMessage = (type, body = {}) => {
  let embed = null;
  switch (type) {
    case userActionType.getInfo:
      embed = new EmbedBuilder()
        .setAuthor({
          name: `Th√¥ng tin c·ªßa ${body?.username}`
        })
        .setFields([
          {
            name: `${emoji.royal} T√†i kho·∫£n`,
            value: `${emoji.redDot} <@${body?.discordUserId}>`,
            inline: true
          },
          {
            name: `${emoji.ruby} Bi·ªát danh`,
            value: `${emoji.redDot} ${body?.displayName}`,
            inline: true
          },
          {
            name: 'üïõ Tham gia server',
            value: `${emoji.redDot} ${body?.joinedServer ? body.joinedServer: 'Ch∆∞a x√°c ƒë·ªãnh'}`,
          },
          {
            name: `${emoji.nitro} Boost`,
            value: `${emoji.redDot} ${body?.boostTime ? body.boostTime : 'Kh√¥ng'}`,
          },
          {
            name: `üíó C√°c m·ªëi quan h·ªá`,
            value: renderFriendList(body.friends)
          }
        ])
        .setThumbnail(body?.avatar)
        .setColor(0xe59b9b)
        .setFooter({ 
          text: `Bot L√†ng ‚Ä¢ discord.gg/langleuleuliuliu`,
          iconURL: 'https://cdn.discordapp.com/avatars/1168802361481904188/3526d4d2d2283aec1df941b1b5aef6ee.png'
        })
        .setTimestamp();
      break;
    case userActionType.attended:
      embed = new EmbedBuilder()
        .setTitle(`${emoji.checked} ƒêi·ªÉm danh th√†nh c√¥ng`)
        .setDescription(`${emoji.blank}${emoji.fiveDot} ƒêi·ªÉm danh h·∫±ng ng√†y: **+50** <:leu_ticket:1168509616938815650> \n${emoji.blank}${emoji.fiveDot}ƒêi·ªÉm danh li√™n t·ª•c **${body.streak}** ng√†y: **+${body.streakBonus}** ${emoji.silverTicket}\n ${roleBonusRender(body.roleBonus)} \n¬ª T·ªïng nh·∫≠n: **${body.totalSilver}** ${emoji.silverTicket} | **${body.totalGold}** ${emoji.goldenTicket}\n\n`)
        .setThumbnail(imageCommand.daily)
        .setColor(0xe59b9b)
        .setFooter({ 
          text: body.username,
          iconURL: `https://cdn.discordapp.com/avatars/${body.discordUserId}/${body.avatar}.png`
        })
        .setTimestamp();
      break;
    case userActionType.getQuest:
      embed = new EmbedBuilder()
      .setAuthor({
        name: `B·∫£ng nhi·ªám v·ª• ${body.questType === 'week' ? 'tu·∫ßn' : 'ng√†y'}`,
        iconURL: `https://cdn.discordapp.com/avatars/1168802361481904188/3526d4d2d2283aec1df941b1b5aef6ee.png`
      })
      .setDescription(`${emoji.blank}${emoji.redDot} T·ªïng nhi·ªám v·ª• ƒë√£ ho√†n th√†nh: ${body.totalQuestCompleted}\n${emoji.blank}${emoji.redDot} Ticket h·∫±ng ng√†y: ${body.totalTicketClaimDaily}/${body.maxTicket}\n ${body.questType === 'daily' ? `${emoji.blank}${emoji.redDot} C·∫•p ƒë·ªô nhi·ªám v·ª•: ${body.level}\n${emoji.blank}${emoji.redDot} S·ªë nhi·ªám v·ª• ƒë∆∞·ª£c nh·∫≠n: ${body.questQuantity}\n\n${emoji.ruby}N√¢ng c·∫•p ƒë·ªô ƒë·ªÉ tƒÉng ƒë∆∞·ª£c nhi·ªÅu nhi·ªám v·ª• v√† gi·ªõi h·∫°n ticket ƒë∆∞·ª£c nh·∫≠n h·∫±ng ng√†y\n` : ''} ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\nüìñ Nhi·ªám v·ª• h√¥m nay\n${emoji.blank}${emoji.redDot}L√†m m·ªõi sau ${body.endTime}\n\n` + renderQuest(body.quests) + `${body.questType !== 'week' ? `${emoji.ruby} <:leu_scroll38:1158500980242010122>V√© l√†m m·ªõi: x${body.resetQuantity}\n` : ''}` + '``‚ö†Ô∏è  L∆∞u √Ω: N√™n nh·∫≠n th∆∞·ªüng tr∆∞·ªõc th·ªùi gian l√†m m·ªõi.``')
      .setThumbnail(levelImage[body.level])
      .setColor(0xe59b9b)
      .setFooter({ 
        text: body.username,
        iconURL: `https://cdn.discordapp.com/avatars/${body.discordUserId}/${body.avatar}.png`
      })
      .setTimestamp();
      break;
    case userActionType.guide:
      embed = new EmbedBuilder()
      .setTitle('H∆∞·ªõng d·∫´n t√≠nh nƒÉng nhi·ªám v·ª•')
      .setDescription(`${emoji.redDot} B·∫£ng nhi·ªám v·ª• l√† n∆°i ƒë·ªÉ theo d√µi nhi·ªám v·ª• ƒë√£ nh·∫≠n v√† ti·∫øn ƒë·ªô ho√†n th√†nh c√°c nhi·ªám v·ª• h√†ng ng√†y v√† tu·∫ßn  c·ªßa b·∫°n.\n\n${emoji.redDot} M·ªói ng√†y b·∫°n ƒë∆∞·ª£c nh·∫≠n s·ªë nhi·ªám v·ª• t√πy theo c·∫•p ƒë·ªô c·ªßa b·∫°n, ho√†n th√†nh ch√∫ng ƒë·ªÉ nh·∫≠n ƒë∆∞·ª£c c√°c ph·∫ßn th∆∞·ªüng ƒëi k√®m v√© xanh.\n\n${emoji.redDot} M·ªói ƒë·∫ßu tu·∫ßn nhi·ªám v·ª• tu·∫ßn s·∫Ω ƒë∆∞·ª£c l√†m m·ªõi. B·∫°n c√≥ th·ªÉ nh·∫≠n ƒë∆∞·ª£c m·ªôt nhi·ªám v·ª• m·ªói tu·∫ßn. Ho√†n th√†nh ch√∫ng ƒë·ªÉ nh·∫≠n ƒë∆∞·ª£c c√°c ph·∫ßn th∆∞·ªüng ƒëi k√®m nh∆∞ v√© xanh, v√© v√†ng, qu√† t·∫∑ng, v√© reset nhi·ªám v·ª• ng√†y.\n\n${emoji.redDot} T·ªïng nhi·ªám v·ª• ƒë√£ ho√†n th√†nh s·∫Ω hi·ªÉn th·ªã s·ªë l∆∞·ª£ng nhi·ªám v·ª• ng√†y b·∫°n ƒë√£ ho√†n th√†nh.\n\n${emoji.redDot} Ticket h√†ng ng√†y s·∫Ω hi·ªÉn th·ªã s·ªë l∆∞·ª£ng v√© m√† b·∫°n c√≥ th·ªÉ nh·∫≠n ƒë∆∞·ª£c h·∫±ng ng√†y.\n\n${emoji.redDot} C·∫•p ƒë·ªô nhi·ªám v·ª• s·∫Ω hi·ªÉn th·ªã c·∫•p ƒë·ªô hi·ªán t·∫°i c·ªßa b·∫°n.\n\n${emoji.redDot} N√¢ng c·∫•p s·∫Ω gi√∫p tƒÉng th√™m l∆∞·ª£ng v√© c√≥ th·ªÉ nh·∫≠n ƒë∆∞·ª£c h·∫±ng ng√†y v√† s·ªë l∆∞·ª£ng nhi·ªám v·ª• m·ªói ng√†y c·ªßa b·∫°n.` + '``L∆∞u √Ω: Sau khi n√¢ng c·∫•p ƒë·ªô th√¨ nhi·ªám v·ª• c·ªßa b·∫°n s·∫Ω kh√¥ng ƒë∆∞·ª£c l√†m m·ªõi v√† s·ªë l∆∞·ª£ng nhi·ªám v·ª• nh·∫≠n ƒë∆∞·ª£c c·ªßa c·∫•p ƒë·ªô m·ªõi s·∫Ω ch∆∞a ƒë∆∞·ª£c √°p d·ª•ng cho ng√†y m√† b·∫°n n√¢ng c·∫•p. N√≥ s·∫Ω ƒë∆∞·ª£c √°p d·ª•ng cho ng√†y h√¥m sau.``\n\n' + `${emoji.redDot} Nh·∫≠n th∆∞·ªüng: B·∫°n c√≥ th·ªÉ nh·∫≠n th∆∞·ªüng c·ªßa b·∫£ng nhi·ªám v·ª• ng√†y v√† tu·∫ßn.` + '``L∆∞u √Ω: Nh·∫≠n th∆∞·ªüng tr∆∞·ªõc th·ªùi gian reset c·ªßa b·∫£ng nhi·ªám v·ª• ƒë·ªÉ tr√°nh m·∫•t ph·∫ßn th∆∞·ªüng``.\n\n' + `${emoji.redDot} L√†m m·ªõi b·∫£ng nhi·ªám v·ª•: B·∫°n c√≥ th·ªÉ l√†m m·ªõi b·∫£ng nhi·ªám v·ª• khi c√≥ v√© l√†m m·ªõi. V√© c√≥ th·ªÉ nh·∫≠n ƒë∆∞·ª£c v√© t·ª´ ph·∫ßn th∆∞·ªüng nhi·ªám v·ª• tu·∫ßn ho·∫∑c mua ·ªü shop v·∫≠t ph·∫©m nhi·ªám v·ª•.` + '``L∆∞u √Ω: Khi b·∫°n ƒë√£ nh·∫≠n th∆∞·ªüng c·ªßa b·∫•t k·ª≥ nhi·ªám v·ª• n√†o th√¨ b·∫°n kh√¥ng th·ªÉ l√†m m·ªõi b·∫£ng nhi·ªám v·ª•.``')
      .setThumbnail('https://cdn.discordapp.com/emojis/1083449029272281159.png')
      .setColor(0xe59b9b)
      .setFooter({ 
        text: body.username,
        iconURL: `https://cdn.discordapp.com/avatars/${body.discordUserId}/${body.avatar}.png`
      })
      .setTimestamp();
      break;
    case userActionType.bag:
      embed = new EmbedBuilder()
      .setAuthor({
        name: "T√∫i v·∫≠t ph·∫©m"
      })
      .setDescription(`<:leu_summer_admin:1159226093350440980>Role:\n\n ${renderRoleBag(body.roles)}‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n<:leu_Bouquet:1169290758772244550>Qu√† t·∫∑ng:\n\n${renderGiftBag(body.gifts)}‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n<:leu_tag:1159222957793615943> V·∫≠t ph·∫©m nhi·ªám v·ª•:\n\n${renderGiftBag(body.questItems)}`)
      .setColor(0xe59b9b)
      .setThumbnail(imageCommand.bag)
      .setFooter({ 
        text: body.username,
        iconURL: `https://cdn.discordapp.com/avatars/${body.discordUserId}/${body.avatar}.png`
      })
      .setTimestamp();
      break;
    case userActionType.giveTicketSuccess:
      embed = new EmbedBuilder()
      .setTitle(`${emoji.checked} Chuy·ªÉn v√© th√†nh c√¥ng`)
      .setDescription(`üí∏ | <@${body.sender}> ƒë√£ chuy·ªÉn ${body.amount} ${emoji.silverTicket} cho <@${body.receipt}>\n${emoji.redDot} L√†ng thu c·ªßa b·∫°n 10% thu·∫ø: ${body.tax} ${emoji.silverTicket} \n${emoji.redDot} S·ªë v√© c√≤n l·∫°i: ${body.silverTicket} ${emoji.silverTicket}`)
      .setColor(0xe59b9b)
      .setThumbnail(`https://cdn.discordapp.com/avatars/${body.sender}/${body.avatar}.png`)
      .setFooter({ 
        text: `Bot L√†ng ‚Ä¢ discord.gg/langleuleuliuliu`,
        iconURL: `https://cdn.discordapp.com/avatars/1168802361481904188/3526d4d2d2283aec1df941b1b5aef6ee.png`
      })
      .setTimestamp();
      break;
    case userActionType.bxh:
      embed = new EmbedBuilder()
      .setTitle(`${emoji.royal} B·∫£ng x·∫øp h·∫°ng ${body.rankingType}`)
      .setDescription(body.isCouple ? rankingCouple(body.rankList) : ranking(body.rankList))
      .setColor(0xe59b9b)
      .setFooter({ 
        text: `Bot L√†ng ‚Ä¢ discord.gg/langleuleuliuliu`,
        iconURL: `https://cdn.discordapp.com/avatars/1168802361481904188/3526d4d2d2283aec1df941b1b5aef6ee.png`
      })
      .setTimestamp();
      break;
    default:
      break;
  }
  return embed;
};

const level = (point) => {
  if (point <= 500) {
    return 'B·∫°n b√®';
  } 
  if (point <= 1000) {
    return 'B·∫°n th√¢n';
  }
  if (point > 1000) {
    return 'Tri k·ª∑';
  }
}

module.exports = { createUserMessage };